@model StreetFighter.Web.Models.FichaTecnicaModel

@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var destino = "";
    var editar = ViewBag.Editar != null ? ViewBag.Editar : false;
    var nome = "";
    var dataNascimento = DateTime.Now;
    var altura = 0;
    decimal peso = 0;
    var golpesEspeciais = "";
    var id = 0;
    if (editar)
    {
        destino = "SalvarPersonagemEditado";
        id = Model.Id;
        nome = Model.Nome;
        dataNascimento = Model.DataNascimento;
        altura = Model.Altura;
        peso = Model.Peso;
        golpesEspeciais = Model.GolpesEspeciais;

    }
    else
    {
        destino = "FichaCadastrada";
    }
}


@{ 

}

<div class="descricao-conteudo">
    <h1>Street Fighter</h1>
</div>
<div class="conteudo-corpo">
    @using (Html.BeginForm(destino, "StreetFighter", FormMethod.Post))
    {
        <div class="dados">
            @Html.LabelFor(model => model.Nome, new { @class = "labelCampo" })
            <div>
                @Html.TextBoxFor(model => model.Nome, new { @class = "campo", placeholder = "Digite o nome aqui", value = nome })
                @Html.ValidationMessageFor(model => model.Nome)
            </div>
        </div>
        
        <div class="dados">
            @Html.LabelFor(model => model.DataNascimento, new { @class = "labelCampo" })
            <div>
                @Html.TextBoxFor(model => model.DataNascimento, new { @class = "campo", placeholder = "Digite a data de nascimento em fomato BR", value = dataNascimento })
                @Html.ValidationMessageFor(model => model.DataNascimento)
            </div>
        </div>

        <div class="dados">
            @Html.LabelFor(model => model.Altura, new { @class = "labelCampo"})
            <div>
                @Html.TextBoxFor(model => model.Altura, new { @class = "campo", placeholder = "Digite a altura em cm", value = altura })
                @Html.ValidationMessageFor(model => model.Altura)
            </div>
        </div>

        <div class="dados">
            @Html.LabelFor(model => model.Peso, new { @class = "labelCampo" })
            <div>
                @Html.TextBoxFor(model => model.Peso, new { @class = "campo", placeholder = "Digite o peso em formato BR", value = peso })
                @Html.ValidationMessageFor(model => model.Peso)
            </div>
        </div>

        <div class="dados">
            @Html.LabelFor(model => model.Origem, new { @class = "labelCampo" })
            <div class="select-style">
                @Html.DropDownListFor(model => model.Origem, (IEnumerable<SelectListItem>)ViewBag.ListaPais, "Selecione...")
            </div>
            @Html.ValidationMessageFor(model => model.Origem)
        </div>

        <div class="dados">
            @Html.LabelFor(model => model.GolpesEspeciais, new { @class = "labelCampo" })
            <div>
                @Html.TextBoxFor(model => model.GolpesEspeciais, new { @class = "campo", placeholder = "Quais os golpes especiais", value = golpesEspeciais })
                @Html.ValidationMessageFor(model => model.GolpesEspeciais)
            </div>
        </div>

        <div class="dados">
            @Html.LabelFor(model => model.Oculto, new { @class = "labelCampo" })

            @Html.CheckBoxFor(model => model.Oculto)
        </div>
        <input type="text" hidden value=@id name="Id" />
        
        <button type="submit" class="btnEnviar">Enviar</button>
    }
</div>

<script src="~/Scripts/jquery-1.9.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script type="text/javascript">
        $.validator.methods.number = function (value, element) {
            var regex = /^(\d*)(\,\d{1,2})?$/; //99999,99
            return this.optional(element) || regex.test(value);
        }

        $.validator.methods.date = function (value, element) {
            var date = new Date(value.replace(/(\d{2})[/](\d{2})[/](\d{4})/, "$2/$1/$3")); //31/12/2016
            return this.optional(element) || !/Invalid|NaN/.test(date.toString());
        }
</script>